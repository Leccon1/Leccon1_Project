@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
  /**
     Убираем скачок интерфейса по горизонтали
     при появлении / исчезновении скроллбара
    */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none], [fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none], [stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* @function rem($pixel) {
	@if math.is-unitless($pixel) {
		@return math.div($pixel, 16) + rem;
	} @else {
		@error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.';
	}
} */
:root {
  --bg-color-main: linear-gradient(
  	0deg,
  	rgba(237, 185, 208, 1) 0%,
  	rgba(160, 194, 233, 1) 100%
  );
  --color-purple: rgb(100, 50, 250);
  --font-family-base: "Comforta";
  --font-family-accent: "Chillax";
  --max-width: 1200px;
  --border-radius: 15px;
  --transition-duration: 0.4s;
}

body {
  font-family: var(--font-family-base);
  background: var(--bg-color-main);
  background-repeat: no-repeat;
  background-size: cover;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.28;
}

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  font-family: var(--font-family-base);
  color: var(--color-purple);
  font-weight: 700;
}

h1,
.h1 {
  font-size: 48px;
}

h2,
.h2 {
  font-size: 40px;
}

h3,
.h3 {
  font-size: 30px;
}

h4,
.h4 {
  font-size: 20px;
}

p {
  font-family: var(--font-family-accept);
}

a {
  text-decoration: none;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

@font-face {
  font-family: "Comforta";
  src: url(/fonts/Comfortaa-Bold.woff2);
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Comforta";
  src: url(/fonts/Comfortaa-SemiBold.woff2);
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Comforta";
  src: url(/fonts/Comfortaa-Medium.woff2);
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Comforta";
  src: url(/fonts/Comfortaa-Regular.woff2);
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Chillax";
  src: url(/fonts/Chillax-Bold.woff2);
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Chillax";
  src: url(/fonts/Chillax-Semibold.woff2);
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Chillax";
  src: url(/fonts/Chillax-Medium.woff2);
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Chillax";
  src: url(/fonts/Chillax-Regular.woff2);
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
.wrapper {
  max-width: 1200px;
  margin-inline: auto;
}

.logo {
  font-size: 48px;
  color: var(--color-purple);
  letter-spacing: normal;
}
.logo__letter-deco {
  color: gold;
}
.logo__letter {
  transition: all ease-in-out;
  transition-duration: var(--transition-duration);
}
.logo__letter:hover {
  transform: translateY(-5px);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 767.98px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 767.98px) {
  .visible-mobile {
    display: none !important;
  }
}

.header {
  padding-top: 200px;
}
.header__inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header__logo {
  align-items: center;
  justify-content: center;
}
.header__menu {
  height: 75px;
  width: 750px;
  background: linear-gradient(135deg, rgba(160, 194, 233, 0.1), rgba(255, 255, 255, 0));
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 20px;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px 0 rgba(90, 90, 90, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
}
.header__menu-list {
  display: flex;
  align-items: center;
  column-gap: 40px;
}
.header__menu-link {
  position: relative;
  display: inline-flex;
  align-items: center;
  height: 48px;
}
@media (any-hover: hover) {
  .header__menu-link:hover::after {
    width: 100%;
  }
}
@media (any-hover: none) {
  .header__menu-link:active::after {
    width: 100%;
  }
}
.header__menu-link::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  translate: -50%;
  width: 0;
  height: 2px;
  background-color: currentColor;
  transition-duration: inherit;
}

/*# sourceMappingURL=main.css.map */
